[package]
name = "embedded_template"
version = "0.1.0"
edition = "2021"

# this lets you use `cargo fix`!
[[bin]]
name = "embedded_template"
test = false
bench = false

# TODO: might be a bit dangerous? i have no idea how well that works
[profile.release]
opt-level = 's'      # optimize for size. We only have 64kB
codegen-units = 1    # More code generation units allows more of a crate to be processed in parallel possibly reducing compile time, but may produce slower code
debug = true           # debug symbols are nice and apperantly do not increase the file size
lto = true           # Link-time-optimizations for further size reduction


[profile.dev]
opt-level = 1
codegen-units = 16
debug = true
lto = false

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
embedded-hal = "^0.2.7"
nb = "^0.1.3"
cortex-m = "^0.7.4"
cortex-m-rt = "^0.7.1"
# Panic behaviour, see https://crates.io/keywords/panic-impl for alternatives
panic-halt = "^0.2.0"
cortex-m-rtic = "1.0.0"
systick-monotonic = "1.0.0"
heapless = "0.7.10"
example_lib = { path = '../lib/example_lib' }

[dependencies.stm32f1xx-hal]
version = "^0.8.0"
features = ["rt", "stm32f103", "medium"]
